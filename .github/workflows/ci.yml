name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run lint:ci
      - run: npm run type-check:strict
  
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run test:coverage
      - name: Update coverage badges
        run: node scripts/update-badges.js
      - name: Commit badge updates
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "docs: update coverage badges [skip ci]" || echo "No changes to commit"
          git push
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      
      # Check bundle size
      - name: Analyze bundle size
        run: |
          npx vite build --config vite.budget.config.js
          
      # Check if any bundles exceed size limits
      - name: Check bundle size limits
        run: node scripts/check-bundle-sizes.js
  
  security:
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      # Run dependency management scripts
      - name: Check dependencies
        run: bash scripts/check-dependencies.sh
      
      # Run automated dependency management
      - name: Run dependency manager
        run: bash scripts/dependency-manager.sh
      
      # Enhanced npm security audit with moderate level
      - name: Run npm security audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=high
          if [ $? -ne 0 ]; then
            echo "::error::Security vulnerabilities at high or critical level found. Please resolve these issues."
            exit 1
          fi
      
      # Initialize CodeQL Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended
      
      # Run CodeQL Analysis
      - name: Analyze with CodeQL
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript,typescript"
      
      # Check for critical CodeQL alerts
      - name: Check for high-severity alerts
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: codeql-results.sarif
          fail-on-severity: high
      
      # Run OWASP Dependency Check
      - name: Run OWASP dependency check
        uses: dependency-check/Dependency-Check_Action@main
        id: dependency-check
        with:
          project: 'canvas-app'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      # Upload security reports
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            reports/
            codeql-results.sarif
          retention-days: 30

  accessibility:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Storybook accessibility tests
        run: npm run test-storybook -- --coverage
      
      - name: Run Playwright accessibility tests
        run: npm run test:e2e
        env:
          CI: true
          FAIL_ON_A11Y_ERROR: true
      
      - name: Check for accessibility violations
        run: |
          if [ -f "test-results/a11y-violations.json" ]; then
            VIOLATIONS=$(cat test-results/a11y-violations.json | jq length)
            if [ "$VIOLATIONS" -gt 0 ]; then
              echo "Found $VIOLATIONS accessibility violations"
              exit 1
            fi
          fi

      - name: Upload accessibility reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-reports
          path: |
            test-results/
            playwright-report/
          retention-days: 7
